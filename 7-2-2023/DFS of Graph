class Solution {
    public static void dfs(int n, boolean visited[],ArrayList<ArrayList<Integer>>adj, ArrayList<Integer> l){
        visited[n]=true;
        l.add(n);
        for(Integer m:adj.get(n)){
            if(visited[m]==false){
                dfs(m,visited,adj,l);
            }
        }
    }
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean visited[]=new boolean[V+1];
        visited[0]=true;
        ArrayList<Integer> l=new ArrayList<>();
        dfs(0,visited,adj,l);
        return l;
    }
}
