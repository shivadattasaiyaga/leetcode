class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list=new ArrayList<>();
        if(root==null){
            return list;
        }
        Deque<TreeNode> deque= new LinkedList<>();
        int count=0;
        deque.add(root);
        while(!deque.isEmpty()){
            int size=deque.size();
            ArrayList<Integer> list1=new ArrayList<>();
            for(int i=0;i<size;i++){
                TreeNode curr=new TreeNode();
                if(count%2==0){
                    curr=deque.pollLast();
                    if(curr.left!=null){
                        deque.addFirst(curr.left);
                    }
                    if(curr.right!=null){
                        deque.addFirst(curr.right);
                    }
                }
                else{
                    curr=deque.pollFirst();
                    if(curr.right!=null){
                        deque.addLast(curr.right);
                    }
                    if(curr.left!=null){
                        deque.addLast(curr.left);
                    }
                }
                list1.add(curr.val);
            }
            count+=1;
            list.add(list1);
        }
        return list;
    }
}
